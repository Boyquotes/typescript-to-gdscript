extends Reference
{{- if comment }}
# {comment}

{{ endif -}}
# Generated by typescript-to-gdscript. Do not edit by hand!
# You can extend this in another class to override behaviors

{{ for import in imports -}}
const {import.name} = preload("{{ if import.gd_impl }}.{{ endif }}./{import.src}"){{ endfor }}
{{ for enum in enums -}}
enum {enum.name} \{
    {{ for m in enum.members }}{m.name} = {m.value}{{ if not @last }},
    {{ endif }}{{ endfor }}
}
{{ endfor }}
{state_vars}

{{ for var_decl in var_descriptors -}}
{{ if var_decl.comment -}}
# {var_decl.comment}
{{ endif -}}
var {var_decl.name}: {var_decl.decl_type}{{ if var_decl.decl_init }} = {var_decl.decl_init} {{ endif }}
{{ endfor }}
func _init(src: { src_type.name } {{if src_type.init }}= {src_type.init}{{ endif }}) -> void:
    update(src)

func update(src: { src_type.name }) -> void:
    # custom import logic can be added by overriding this function

    __initialized = __initialized || len(src) > 0
{{ for var in vars -}}
{ var.init }
{{ endfor }}

func for_json() -> Dictionary:
    # custom logic to serialize to dict/array/primitive for json
    var result = \{}
    if !__initialized:
        return result
{{ for var in vars -}}
{ var.for_json }
{{ endfor }}
    return result

{state_methods}
